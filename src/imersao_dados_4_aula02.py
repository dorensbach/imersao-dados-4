# -*- coding: utf-8 -*-
"""imersao-dados-4-aula02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dycat6yTpalIfR0_rf16va6-dT_I2XaG

# Aula 02
25/05/2022 - 26/05/2022

Desafios propostos pelos professores:

1) Criar uma escala de valores em milhões\
2) Deixar o gráfico do histograma de valores legível, alterar as labels, cores, título, escala\
3) Preço do metro quadrado por bairro\
"""

import pandas as pd
# Graficos
import seaborn as sns
import matplotlib.pyplot as plt

url = 'https://gist.githubusercontent.com/tgcsantos/3bdb29eba6ce391e90df2b72205ba891/raw/22fa920e80c9fa209a9fccc8b52d74cc95d1599b/dados_imoveis.csv'
dados = pd.read_csv(url)

dados.head()

# Para selecionar mais de uma coluna
dados[['Valor', 'Bairro']]

dados.info()

dados["Valor"][0]

dados["Valor"][2292]

dados["Valor"][0].split()

# Convertendo O Valor de string para number
dados["Valor"].str.split()

# Transforma o split em uma tabela
dados["Valor"].str.split(expand = True)

# Verificando se na coluna 0 tem apenas o R$:
dados["Valor"].str.split(expand = True)[0].unique()

dados["Valor"].str.split(expand = True)[2].unique()

# Verificando a qtde de valores diferentes na coluna 1:
len(dados["Valor"].str.split(expand = True)[1].unique())

# Adicionando estes 3 novos campos (gerados com o split) ao DataFrame:
dados[['Moeda', 'Valor_anuncio', 'Tipo_anuncio']] = dados["Valor"].str.split(expand = True)
dados.head()

# Filtrando para eliminar os registros com tipo_anuncio diferentes de none
dados[dados['Tipo_anuncio'].isnull()]

# Provando que o filtro deu certo. Retorna apenas os registros com valor None
dados[dados['Tipo_anuncio'].isnull()]['Tipo_anuncio'].unique()

# Sobrescreve o dataframe apenas com os registros filtrados
dados_vendas = dados[dados['Tipo_anuncio'].isnull()]
dados_vendas

dados_vendas.info()

# Eliminando os pontos da coluna valor_anuncio
dados_vendas['Valor_anuncio'].str.replace('.', '')

# Convertendo o campo para numerico
dados_vendas['Valor_anuncio'].str.replace('.', '').astype(float)

# Persistindo o valor convertido no dataframe
dados_vendas['Valor_anuncio_float'] = dados_vendas['Valor_anuncio'].str.replace('.', '').astype(float)
dados_vendas.head()

dados_vendas.info()

dados_vendas['Valor_anuncio_float'].plot.hist()

dados_vendas['Valor_anuncio_float'].plot.hist(bins = 100)

dados_vendas.describe()

# Seta as casas decimais
pd.set_option('display.precision', 2)
dados_vendas.describe()

# Seta casas decimais e tira da notação cientifica
pd.set_option('display.float_format', lambda x: '%.2f' % x)
dados_vendas.describe()

# O describe em dados texto
dados_vendas[['Rua', 'Bairro', 'Cidade']].describe()

sns.set()
sns.histplot(data = dados_vendas, x = 'Valor_anuncio_float', kde = True)

plt.figure(figsize=(10,8))
ax = sns.histplot(data = dados_vendas, x = 'Valor_anuncio_float', kde = True)
ax.set_title("Histograma Valor Imóvel")
plt.xlim((-50, 10000000))
plt.show()

